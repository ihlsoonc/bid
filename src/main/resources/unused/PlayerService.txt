package kr.or.sports.tosresult.service.impl;


import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import egovframework.rte.fdl.cmmn.EgovAbstractServiceImpl;
import kr.or.sports.tosresult.service.impl.PlayerMapper;
//import kr.or.sports.tong.web.LoginController;

@Service("PlayerService")
public class PlayerService  extends EgovAbstractServiceImpl {

	private static final Logger LOGGER = LoggerFactory.getLogger(PlayerService.class);

	@Autowired
    PlayerMapper playerMapper;
    public List<Map<String, Object>> getcimap(Map<String, Object> map) throws Exception { return playerMapper.getcimap(map); }   
    public List<Map<String, Object>> getLoginAjax(Map<String, Object> map) throws Exception { return playerMapper.getLoginAjax(map); }
    public List<Map<String, Object>> getwebplayerm(Map<String, Object> map) throws Exception { return playerMapper.getwebplayerm(map); }
    public List<Map<String, Object>> getpplpersonm(Map<String, Object> map) throws Exception { return playerMapper.getpplpersonm(map); }
    public List<Map<String, Object>> getsplplayerd(Map<String, Object> map) throws Exception { return playerMapper.getsplplayerd(map); }
    public Map<String, Object> insertwebplayerm(Map<String, Object> map) throws Exception {
    	playerMapper.insertwebplayerm(map);
    	HashMap<String, Object> result = new HashMap();
    	result.put("result", "Success");
    	return(result);
    }
    public Map<String, Object> updatewebplayerm(Map<String, Object> map) throws Exception {
    	playerMapper.updatewebplayerm(map);
    	HashMap<String, Object> result = new HashMap();
    	result.put("result", "Success");
    	return(result);
    }
    public Map<String, Object> deletewebplayerm(Map<String, Object> map) throws Exception {
    	playerMapper.deletewebplayerm(map);
    	HashMap<String, Object> result = new HashMap();
    	result.put("result", "Success");
    	return(result);
    }
    public List<Map<String, Object>> getlastyearperson(Map<String, Object> map) throws Exception { return playerMapper.getlastyearperson(map); }

    public List<Map<String, Object>> get_detail_class_cd(Map<String, Object> map) throws Exception { return playerMapper.get_detail_class_cd(map); }
    public List<Map<String, Object>> get_class_cd(Map<String, Object> map) throws Exception { return playerMapper.get_class_cd(map); }
    public List<Map<String, Object>> searchteamnm(Map<String, Object> map) throws Exception { return playerMapper.searchteamnm(map); }
    public List<Map<String, Object>> searchteamnmrxjs(Map<String, Object> map) throws Exception { return playerMapper.searchteamnmrxjs(map); }
    public List<Map<String, Object>> getwebscholashipd(Map<String, Object> map) throws Exception { return playerMapper.getwebscholashipd(map); }
    public List<Map<String, Object>> getpssschoolm(Map<String, Object> map) throws Exception { return playerMapper.getpssschoolm(map); }

    public Map<String, Object> createpersonno(Map<String, Object> map) throws Exception {
    	playerMapper.createpersonno(map);
    	HashMap<String, Object> result = new HashMap();
    	result.put("result", "Success");
    	return(result);
    }
    public Map<String, Object> copyscholashipd(Map<String, Object> map) throws Exception {
    	playerMapper.copyscholashipd(map);
    	HashMap<String, Object> result = new HashMap();
    	result.put("result", "Success");
    	return(result);
    }
    public Map<String, Object> deletewebscholashipd(Map<String, Object> map) throws Exception {
    	playerMapper.deletewebscholashipd(map);
    	HashMap<String, Object> result = new HashMap();
    	result.put("result", "Success");
    	return(result);
    }
    public Map<String, Object> addwebscholashipd(Map<String, Object> map) throws Exception {
    	playerMapper.addwebscholashipd(map);
    	HashMap<String, Object> result = new HashMap();
    	result.put("result", "Success");
    	return(result);
    }

    public List<Map<String, Object>> getwebpayresultm(Map<String, Object> map) throws Exception { return playerMapper.getwebpayresultm(map); }
    public Map<String, Object> addwebpayresultm(Map<String, Object> map) throws Exception {
    	playerMapper.addwebpayresultm(map);
    	HashMap<String, Object> result = new HashMap();
    	result.put("result", "Success");
    	return(result);
    }
    public Map<String, Object> delwebpayresultm(Map<String, Object> map) throws Exception {
    	playerMapper.delwebpayresultm(map);
    	HashMap<String, Object> result = new HashMap();
    	result.put("result", "Success");
    	return(result);
    }
    public List<Map<String, Object>> getpplsplplayerd(Map<String, Object> map) throws Exception { return playerMapper.getpplsplplayerd(map); }
    public List<Map<String, Object>> getmtaresultbo(Map<String, Object> map) throws Exception { return playerMapper.getmtaresultbo(map); }
    
    
    public int insertUserJoin(Map<String, Object> map) throws Exception {
    	return playerMapper.insertUserJoin(map);
    }
    public int updateUserInfo(Map<String, Object> map) throws Exception {
    	return playerMapper.updateUserInfo(map);
    }
    public Map<String, Object> selectUserInfo(Map<String, Object> map) throws Exception {
    	return playerMapper.selectUserInfo(map);
    }
    
    public int selectSnsInfo(Map<String, Object> map) throws Exception {
    	return playerMapper.selectSnsInfo(map);
    }
    
    public int inserSnsInfo(Map<String, Object> map) throws Exception {
    	return playerMapper.inserSnsInfo(map);
    }
    public int deleteSnsInfo(Map<String, Object> map) throws Exception {
    	return playerMapper.deleteSnsInfo(map);
    }
    
    public Map<String, Object> snsUserCheck(Map<String, Object> map) throws Exception {
    	return playerMapper.snsUserCheck(map);
    }
        
    
}